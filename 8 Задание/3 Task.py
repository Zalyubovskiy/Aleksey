"""
Задание-3. Создайте собственный класс-исключение, который
должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо
запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов
списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются
бесконечно, пока пользователь сам не остановит работу скрипта,
введя, например, команду “stop”. При этом скрипт завершается,
сформированный список выводится на экран.
Подсказка: для данного задания примем, что пользователь
может вводить только числа и строки. При вводе пользователем
очередного элемента необходимо реализовать проверку типа
элемента и вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст
(не число) и отобразить соответствующее сообщение. При этом
работа скрипта не должна завершаться.
"""


class Error(Exception):
    def __init__(self):
        pass


class TypeCheck:
    def __init__(self):
        self.my_list = []

    def check_value(self):
        global user_num
        while True:
            try:
                try:
                    user_num = int(input("Введите числа: "))
                    ex = input(f"Добавляем {user_num} в список. Хотите продолжить? y/n: ").lower()
                    self.my_list.append(user_num)
                    if ex == 'n':
                        print(self.my_list)
                        break
                except ValueError:
                    raise Error
            except Error:
                x = input("Вы ввели ошибочное значение! Хотите продолжить? y/n: ").lower()
                if x == 'n':
                    print(self.my_list)
                    break
                else:
                    self.check_value()


a = TypeCheck()
a.check_value()
